[  {    "question": "What is the difference between HTML, CSS, and JavaScript, and how do they work together to create a webpage?",    "answer": "HTML (HyperText Markup Language) provides the structure and content of a webpage. CSS (Cascading Style Sheets) defines the visual appearance and layout of the page, while JavaScript adds interactivity and dynamic functionality. They work together like this: HTML provides the foundation, CSS styles it, and JavaScript brings it to life with actions and responses."  },  {    "question": "Explain the concept of DOM (Document Object Model) and how JavaScript interacts with it.",    "answer": "The DOM is a structured representation of an HTML document, allowing JavaScript to access and manipulate its elements. JavaScript can select, modify, add, or remove elements, styles, and content within the DOM, creating dynamic web experiences."  },  {    "question": "Describe the different ways you can include JavaScript code in an HTML document.",    "answer": "There are three main methods:\n\n1. **Inline:** Directly within an HTML element using the `on` event attributes (e.g., `<button onclick=\"alert('Hello!')\">Click Me</button>`).\n\n2. **Internal:** Within the `<script>` tag placed within the `<head>` or `<body>` section of the HTML document.\n\n3. **External:** Linking a separate JavaScript file using the `<script src=\"path/to/script.js\"></script>` tag."  },  {    "question": "What are some common CSS layout techniques you are familiar with?",    "answer": "I'm comfortable with various layout techniques, including:\n\n1. **Flexbox:** A powerful and flexible layout method for aligning and distributing elements.\n\n2. **Grid:** A more structured layout system ideal for complex layouts and responsive design.\n\n3. **Float:** A traditional method for positioning elements side-by-side, though less commonly used now due to limitations.\n\n4. **Positioning (absolute, relative, fixed):** Control element placement relative to the page or other elements."  },  {    "question": "Give an example of a simple JavaScript function you've written that performs a specific task, and explain its purpose.",    "answer": "javascript\nfunction calculateSum(a, b) {\n  return a + b;\n}\n```\n\nThis function, named `calculateSum`, takes two numbers as input (`a` and `b`) and returns their sum. It's a basic example of a function that performs a calculation, demonstrating the concept of input, processing, and output."  }]